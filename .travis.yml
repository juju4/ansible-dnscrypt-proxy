---
## from https://github.com/geerlingguy/ansible-role-apache/blob/master/.travis.yml
sudo: required

env:
#  - distribution: centos
#    version: 6
#    init: /sbin/init
#    run_opts: ""
#    ansible_extra_vars: ''
  - distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "'--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro'"
    ansible_extra_vars: ''
    suite: default
  - distribution: ubuntu
    version: 18.04
    init: /lib/systemd/systemd
    run_opts: ""
    ansible_extra_vars: ''
    suite: default
  - distribution: ubuntu
    version: 16.04
    init: /lib/systemd/systemd
    run_opts: ""
    ansible_extra_vars: ''
    suite: default
  - distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
    ansible_extra_vars: ''
    suite: default
#  - distribution: ubuntu
#    version: 16.04
#    init: /lib/systemd/systemd
#    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
#    ansible_extra_vars: "'-e dnscryptproxy_force_source=true'"
#  - distribution: ubuntu
#    version: 14.04
#    init: /sbin/init
#    run_opts: ""
#    ansible_extra_vars: "'-e dnscryptproxy_force_source=true'"
## "Tag 12.04 not found in repository docker.io/library/ubuntu"
#  - distribution: ubuntu
#    version: 12.04
#    init: /sbin/init
#    run_opts: ""
#  - distribution: alpine
#    version: 3.4
#    init: /sbin/init
#    run_opts: ""
  - distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "'--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro'"
    ansible_extra_vars: ''
    suite: default-blacklist
  - distribution: ubuntu
    version: 18.04
    init: /lib/systemd/systemd
    run_opts: ""
    ansible_extra_vars: ''
    suite: default-blacklist

services:
  - docker

before_install:
  # - sudo apt-get update
  # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  - env
  - pwd
  - find -ls
  # role dependencies
  - "[ -f get-dependencies.sh ] && sh -x get-dependencies.sh"
  # Customize container
  - 'sudo docker build --rm=true --file=test/travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible test'

script:
  - container_id=$(mktemp)
    # Run container in detached state
  - 'sudo docker run --detach --volume="${PWD%/*}":/etc/ansible/roles:rw ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'

  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible --version'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/juju4.dnscryptproxy/test/integration/${suite}/default.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/juju4.dnscryptproxy/test/integration/${suite}/default.yml -vvv ${ansible_extra_vars}'

  # Test role idempotence. known fail
  - >
    sudo docker exec "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/juju4.dnscryptproxy/test/integration/${suite}/default.yml ${ansible_extra_vars}
    | tee /tmp/idempotency.log
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && cat /tmp/idempotency.log && exit 0)

  # serverspec tests: NOK, not updating /etc/resolv.conf in docker
#  - 'sudo docker exec --tty "$(cat ${container_id})" /etc/ansible/roles/juju4.dnscryptproxy/test/integration/default/serverspec/run-local-tests.sh'

after_script:
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ps axu'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm cat /opt/dnscrypt-proxy2/linux-x86_64/dnscrypt-proxy.toml'

  # Clean up
  - 'sudo docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
