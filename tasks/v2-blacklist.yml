---

- name: Configure allow-only blocklist
  ansible.builtin.copy:
    dest: "/var/spool/dnscrypt/blocklist_final.txt"
    content: "*.*"
    mode: '0644'
  when:
    - dnscrypt_blockall_default_enable | bool

- name: Configure blocklist - single file
  community.general.ini_file:
    path: /opt/dnscrypt-proxy2/linux-x86_64/dnscrypt-proxy.toml
    section: blocked_names
    option: blocked_names_file
    value: "'{{ dnscrypt_proxy_blocklist_path }}/{{ dnscrypt_proxy_blocklist | basename }}'"
    mode: '0644'
    backup: yes
  when:
    - dnscrypt_proxy_blocklist|string
    - not dnscrypt_blockall_default_enable | bool

- name: Configure blocklist - multiple files
  community.general.ini_file:
    path: /opt/dnscrypt-proxy2/linux-x86_64/dnscrypt-proxy.toml
    section: blocked_names
    option: blocked_names_file
    value: "'/var/spool/dnscrypt/blocklist_final.txt'"
    mode: '0644'
    backup: yes
  when:
    - dnscrypt_blocklist_remote_url | length > 0 or dnscrypt_blocklist_local_files | length > 0 or dnscrypt_blockall_default_enable | bool

- name: Configure blocklist logging
  community.general.ini_file:
    path: /opt/dnscrypt-proxy2/linux-x86_64/dnscrypt-proxy.toml
    section: blocked_names
    option: log_file
    value: "'{{ dnscrypt_proxy_blocklist_logpath | default(omit) }}'"
    mode: '0644'
    backup: yes

- name: Configure allowlist - multiple files
  community.general.ini_file:
    path: /opt/dnscrypt-proxy2/linux-x86_64/dnscrypt-proxy.toml
    section: allowed_names
    option: allowed_names_file
    value: "'/var/spool/dnscrypt/allowlist_final.txt'"
    mode: '0644'
    backup: yes
  when:
    - dnscrypt_allowlist_remote_url | length > 0 or dnscrypt_allowlist_local_files | length > 0

- name: Configure allowlist logging
  community.general.ini_file:
    path: /opt/dnscrypt-proxy2/linux-x86_64/dnscrypt-proxy.toml
    section: allowed_names
    option: log_file
    value: "'{{ dnscrypt_proxy_allowlist_logpath | default(omit) }}'"
    mode: '0644'
    backup: yes

- name: Ensure dnscrypt list user exists
  ansible.builtin.user:
    name: "{{ dnscrypt_list_user }}"
    home: /nonexistent
    create_home: no
    system: yes

- name: Ensure blocklist cache directory exists
  ansible.builtin.file:
    dest: "{{ dnscrypt_proxy_blocklist_path }}"
    state: directory
    mode: '0755'
    owner: "{{ dnscrypt_list_user }}"

- name: Debian | ensure cron is installed
  ansible.builtin.apt:
    name: cron
    state: present
  when: ansible_os_family == 'Debian'
  register: pkg_result
  until: pkg_result is success

- name: RedHat | ensure cron is installed
  ansible.builtin.yum:
    name: crontabs
    state: present
  when: ansible_os_family == "RedHat"
  register: pkg_result
  until: pkg_result is success

- name: Ensure curl package is present for cron
  ansible.builtin.package:
    name: curl
    state: present

- name: Set file for exclusions
  ansible.builtin.template:
    src: "{{ dnscrypt_proxy_blocklist_exclude_template }}.j2"
    dest: "{{ dnscrypt_proxy_blocklist_exclude }}"
    mode: '0644'
    backup: yes

- name: Set merge block/allow list script
  ansible.builtin.template:
    src: "merge_list.sh.j2"
    dest: "/usr/local/scripts/merge_list.sh"
    mode: '0755'
    backup: yes

- name: Ensure /var/spool/dnscrypt exists
  ansible.builtin.file:
    path: /var/spool/dnscrypt
    mode: '0700'
    owner: "{{ dnscrypt_list_user }}"
    state: directory

- name: Ensure schedule task to retrieve blocklist
  ansible.builtin.cron:
    name: dnscrypt blocklist update
    minute: '0'
    hour: '2'
    user: "{{ dnscrypt_list_user }}"
    job: /usr/local/scripts/merge_list.sh
    cron_file: ansible_dnscrypt-proxy2_blocklist

- name: Check if blocklist file
  ansible.builtin.stat:
    path: "{{ dnscrypt_proxy_blocklist_path }}/{{ dnscrypt_proxy_blocklist | basename }}"
  register: blocklistf

- name: Ensure initial blocklist exists
  ansible.builtin.command:
    cmd: /usr/local/scripts/merge_list.sh
  args:
    creates: "${workdir}/blocklist_final.txt"
  when:
    - not blocklistf.stat.exists
    - false
